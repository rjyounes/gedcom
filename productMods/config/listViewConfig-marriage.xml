<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $This file is distributed under the terms of the license in /doc/license.txt$ -->

<list-view-config>
    <query-select>    
        PREFIX gedcom: &lt;http://www.daml.org/2001/01/gedcom/gedcom#&gt;
        PREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;
        
        SELECT DISTINCT ?marriage
                        ?spouse1name
                        ?spouse2name
                        ?date
                        ?place
        WHERE {
            ?subject ?property ?marriage .
            ?subject a gedcom:Family .
            ?marriage a gedcom:Marriage .
            OPTIONAL { ?spouse1 gedcom:spouseIn ?subject ;
                                gedcom:name ?spouse1name ;
                                # gedcom:sex "F"^^xsd:string . }
                                gedcom:sex ?sex1 .
                                FILTER (STR(?sex1) = 'F') }
            OPTIONAL { ?spouse2 gedcom:spouseIn ?subject ;
                                gedcom:name ?spouse2name ;
                                # gedcom:sex "M"^^xsd:string . }
                                gedcom:sex ?sex2 .                               
                                FILTER (STR(?sex2) = 'M') }
            OPTIONAL { ?marriage gedcom:date ?date . }
            OPTIONAL { ?marriage gedcom:place ?place . }

        } 
    </query-select>
       
    <query-construct>
        PREFIX gedcom: &lt;http://www.daml.org/2001/01/gedcom/gedcom#&gt;
        CONSTRUCT { 
            ?subject ?property ?marriage .
            ?subject a gedcom:Family .
            ?marriage a gedcom:Marriage .
            ?spouse gedcom:spouseIn ?subject .
            ?spouse gedcom:name ?name .
            ?spouse gedcom:sex ?sex .
            ?marriage gedcom:date ?date .
            ?marriage gedcom:place ?place .
        } WHERE {
            { ?subject ?property ?marriage .            
              ?subject a gedcom:Family .
              ?marriage a gedcom:Marriage .
              ?spouse gedcom:spouseIn ?subject .
              ?spouse gedcom:name ?name .
              ?spouse gedcom:sex ?sex .
            } UNION {
              ?subject ?property ?marriage .            
              ?subject a gedcom:Family .
              ?marriage a gedcom:Marriage .
              ?marriage gedcom:date ?date .
            } UNION {
              ?subject ?property ?marriage .            
              ?subject a gedcom:Family .
              ?marriage a gedcom:Marriage .
              ?marriage gedcom:place ?place .
            }
        } 
    </query-construct>

              
    <template>propStatement-marriage.ftl</template>
</list-view-config>
